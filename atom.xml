<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xieqiang</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://onenote.netlify.com/"/>
  <updated>2020-04-03T21:17:40.000Z</updated>
  <id>https://onenote.netlify.com/</id>
  
  <author>
    <name>Xieqiang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>笔记/Untitled 4/Queue/Untitled</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%204/Queue/Untitled/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%204/Queue/Untitled/</id>
    <published>2020-04-04T05:20:56.347Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="循环队列"><a href="#循环队列" class="headerlink" title="循环队列"></a>循环队列</h1><p>package Queue;</p><pre><code>import com.sun.javafx.binding.StringFormatter;public class LoopQueue&lt;E&gt; implements Queue&lt;E&gt; {    private E[] data;    private int front, tail;    private int size;    public LoopQueue(int capacity) {        data = (E[]) new Object[capacity + 1];        front = 0;        tail = 0;        size = 0;    }    public LoopQueue() {        this(10);    }    @Override    public int getSize() {        return size;    }    public int getCapacity() {        return data.length - 1;    }    @Override    public boolean isEmpty() {        return front == tail;    }    @Override    public void enqueue(E e) {        //判断是否满        if ((tail + 1) % data.length == front)            resize(getCapacity() * 2);        data[tail] = e;        size++;        tail = (tail + 1) % data.length;//循环队列    }    @Override    public E dequeue() {        if (isEmpty()) {            throw new IllegalArgumentException(&quot;Cannot dequeue&quot;);        }        E ret = data[front];        data[front] = null;        front = (front + 1) % data.length;        size--;        if (size == getCapacity() / 4)            resize(getCapacity() / 2);        return ret;    }    @Override    public E getFront() {        if (isEmpty()) {            throw new IllegalArgumentException(&quot;Cannot dequeue&quot;);        }        return data[front];    }    private void resize(int newCapacity) {        E[] newData = (E[]) new Object[newCapacity + 1];        for (int i = 0; i &lt; size; i++) {            newData[i] = data[(i + front) % data.length];            data = newData;            front = 0;            tail = size;        }    }    public String toString() {        StringBuilder sb = new StringBuilder();//        sb.append(&quot;Queue size = %d, capacity = %d: \n&quot;,1,1);        sb.append(String.format(&quot;Queue size = %d, capacity = %d\n&quot;, size, getCapacity()));        sb.append(&quot;Front [&quot;);        for (int i = front; i != tail; i = (i + 1) % data.length) {            sb.append(data[i]);            if ((i + 1) % data.length != tail)                sb.append(&quot;,&quot;);        }        sb.append(&quot;] Tail&quot;);        return sb.toString();    }    public static void main(String[] args) {        LoopQueue&lt;Integer&gt; array = new LoopQueue&lt;Integer&gt;();        for (int i = 0; i &lt; 20; i++) {            array.enqueue(i);            if (i % 3 == 2) {                array.dequeue();            }            System.out.println(array);        }    }}</code></pre><h2 id="此时出队-dequeue-时间复杂度降为O-1"><a href="#此时出队-dequeue-时间复杂度降为O-1" class="headerlink" title="此时出队 dequeue() 时间复杂度降为O(1)"></a>此时出队 dequeue() 时间复杂度降为O(1)</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;循环队列&quot;&gt;&lt;a href=&quot;#循环队列&quot; class=&quot;headerlink&quot; title=&quot;循环队列&quot;&gt;&lt;/a&gt;循环队列&lt;/h1&gt;&lt;p&gt;package Queue;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import com.sun.javafx.binding.St
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/Untitled 13</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2013/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2013/</id>
    <published>2020-04-04T05:20:56.336Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="套接字与套接字编程"><a href="#套接字与套接字编程" class="headerlink" title="套接字与套接字编程"></a>套接字与套接字编程</h1><h1 id="套接字"><a href="#套接字" class="headerlink" title="套接字"></a>套接字</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li>套接字Socket</li><li>套接字是抽象概念</li><li>表示TCP连接的一端</li><li>通过套接字可以进行数据的发送和接收</li></ul><h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><ul><li>TCP连接可以表示成两个套接字,或者两个ip和端口</li><li>一个ip可以有很多个套接字</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2013/Untitled.png"  alt="Untitled%2013/Untitled.png"></p><h2 id="被动连接-服务端-左"><a href="#被动连接-服务端-左" class="headerlink" title="被动连接\服务端(左"></a>被动连接\服务端(左</h2><h2 id="客户端-右"><a href="#客户端-右" class="headerlink" title="客户端(右"></a>客户端(右</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2013/Untitled%201.png"  alt="Untitled%2013/Untitled%201.png"></p><p>套接字工作在网络接口层</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2013/Untitled%202.png"  alt="Untitled%2013/Untitled%202.png"></p><h1 id="套接字编程"><a href="#套接字编程" class="headerlink" title="套接字编程"></a>套接字编程</h1><ul><li>使用端口来标记不同的网络进程</li><li>端口:16bit 0-65535</li><li>套接字抽象概念,表示 TCP连接的一端</li><li>通过套接字可以进行发送和接k收</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;套接字与套接字编程&quot;&gt;&lt;a href=&quot;#套接字与套接字编程&quot; class=&quot;headerlink&quot; title=&quot;套接字与套接字编程&quot;&gt;&lt;/a&gt;套接字与套接字编程&lt;/h1&gt;&lt;h1 id=&quot;套接字&quot;&gt;&lt;a href=&quot;#套接字&quot; class=&quot;headerlink
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/TCP 5</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%205/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%205/</id>
    <published>2020-04-04T05:20:56.332Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TCP连接的释放"><a href="#TCP连接的释放" class="headerlink" title="TCP连接的释放"></a>TCP连接的释放</h1><h1 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h1><h2 id="第一次→接收方"><a href="#第一次→接收方" class="headerlink" title="第一次→接收方"></a>第一次→接收方</h2><ul><li><code>FIN=1</code>，seq=u，表示需要释放连接</li><li>连接结束的第一个等待状态FIN-WAIT-1</li></ul><h2 id="第二次→发送方"><a href="#第二次→发送方" class="headerlink" title="第二次→发送方"></a>第二次→发送方</h2><ul><li>ACK=1,seq=v,ack=u+1释放消息已经收到</li><li>发送方进入第二个等待状态 <code>FIN-WAIT-2</code>，此状态发送方仍然可以进行数据的发送</li><li>接收方进入了关闭等待的状态CLOSE-WAIT—接收方还可以进行消息的发送接收</li></ul><h2 id="第三次→发送方"><a href="#第三次→发送方" class="headerlink" title="第三次→发送方"></a>第三次→发送方</h2><ul><li>FIN=1，ACK=1，seq=w，ack=u+1</li><li>发送方：LAST-ACK　，进入最后确认的状态</li></ul><h2 id="第四次"><a href="#第四次" class="headerlink" title="第四次"></a>第四次</h2><ul><li>ACK=1,seq=u+1,ack=w+1</li><li>发送方：<strong><code>等待计时器</code></strong>，关闭</li><li>接收方：关闭</li></ul><h2 id="等待计时器"><a href="#等待计时器" class="headerlink" title="等待计时器"></a>等待计时器</h2><ul><li>TIME-WAIT ，等待一段时间，确保没有发生任何问题</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%205/Untitled.png"  alt="TCP%205/Untitled.png"></p><ul><li>等待计时器的等待时间: 2MSL</li><li>MSL Max Segment Lifetime :  最长报文段寿命 ,通常设成 <code>**2分钟**</code></li><li>等待计时器期间不会释放此端口</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%205/Untitled%201.png"  alt="TCP%205/Untitled%201.png"></p><h3 id="为什么需要等待2MSL"><a href="#为什么需要等待2MSL" class="headerlink" title="为什么需要等待2MSL?"></a>为什么需要等待2MSL?</h3><ul><li>最后一个报文没有确认</li><li>确保发送方的<code>**ACK**</code>可以到达接收方</li><li><strong><code>2MSL时间内没有收到, 则接收方会重发</code></strong></li><li>确保当前连接的所有报文都已经过期</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TCP连接的释放&quot;&gt;&lt;a href=&quot;#TCP连接的释放&quot; class=&quot;headerlink&quot; title=&quot;TCP连接的释放&quot;&gt;&lt;/a&gt;TCP连接的释放&lt;/h1&gt;&lt;h1 id=&quot;四次挥手&quot;&gt;&lt;a href=&quot;#四次挥手&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/TCP 4</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%204/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%204/</id>
    <published>2020-04-04T05:20:56.328Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TCP连接的建立"><a href="#TCP连接的建立" class="headerlink" title="TCP连接的建立"></a>TCP连接的建立</h1><h1 id="TCP标记"><a href="#TCP标记" class="headerlink" title="TCP标记"></a>TCP标记</h1><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%204/Untitled.png"  alt="TCP%204/Untitled.png"></p><p>与三次握手相关联的三个重要标记</p><ul><li>ACK =1，确认号生效</li><li>SYN =1 连接请求</li><li>FIN</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%204/Untitled%201.png"  alt="TCP%204/Untitled%201.png"></p><h1 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h1><h2 id="总过程"><a href="#总过程" class="headerlink" title="总过程"></a>总过程</h2><ul><li>发送方2次k握手进入连接状态</li><li>接收方3次握手进入连接状态</li><li>第二次和第三次都有ACK的标记</li></ul><p>SYN=1，seq =x，序列号=x；</p><p>SYN=1，ACK =1 和确认号一起，seq=y自己的序列号，ack =x+1，确认号，期待收到<strong>序列号x+1的报文</strong></p><p>没有SYN，ACK=1，确认号有用，seq=x+1，ack=y+1，</p><h3 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h3><ul><li><p>发送方两次握手之后建立连接状态</p></li><li><p>接收方三次握手之后建立连接状态</p><p>  <img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%204/Untitled%202.png"  alt="TCP%204/Untitled%202.png"></p></li></ul><h2 id="为什么发送方要发送第三个确认报文？"><a href="#为什么发送方要发送第三个确认报文？" class="headerlink" title="为什么发送方要发送第三个确认报文？"></a>为什么发送方要发送第三个确认报文？</h2><blockquote><p>避免已经<strong>失效的连接请求报文</strong>传送到对方，<strong>引起错误</strong></p></blockquote><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><ul><li><p>发送方是连接请求的一方</p></li><li><p>假设发送方在网络中传输了很久，又发送了一个请求报文先到，早先发送的就成了失效的请求报文</p><p>  <img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%204/Untitled%203.png"  alt="TCP%204/Untitled%203.png"></p></li><li><p>只要建立了第三次握手就会忽略因为网络延迟导致的握手</p></li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%204/Untitled%204.png"  alt="TCP%204/Untitled%204.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%204/Untitled%205.png"  alt="TCP%204/Untitled%205.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TCP连接的建立&quot;&gt;&lt;a href=&quot;#TCP连接的建立&quot; class=&quot;headerlink&quot; title=&quot;TCP连接的建立&quot;&gt;&lt;/a&gt;TCP连接的建立&lt;/h1&gt;&lt;h1 id=&quot;TCP标记&quot;&gt;&lt;a href=&quot;#TCP标记&quot; class=&quot;headerlink
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/TCP 3</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%203/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%203/</id>
    <published>2020-04-04T05:20:56.325Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TCP协议的拥塞控制"><a href="#TCP协议的拥塞控制" class="headerlink" title="TCP协议的拥塞控制"></a>TCP协议的拥塞控制</h1><h1 id="拥塞的原因"><a href="#拥塞的原因" class="headerlink" title="拥塞的原因"></a>拥塞的原因</h1><ul><li>一条数据链路经过非常多的 设备</li><li>数据链路中各个部分都有可能成为网络传输的瓶颈</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%203/Untitled.png"  alt="TCP%203/Untitled.png"></p><h2 id="拥塞和TCP流量控制的对比"><a href="#拥塞和TCP流量控制的对比" class="headerlink" title="拥塞和TCP流量控制的对比"></a>拥塞和TCP流量控制的对比</h2><ul><li>流量控制考虑点对点的通信量的控制</li><li>拥塞控制考虑整个网络，是全局性的考虑</li></ul><h1 id="判断方法"><a href="#判断方法" class="headerlink" title="判断方法"></a>判断方法</h1><p><code>**报文超时则认为是拥塞</code>，只是作为判断网络拥塞的一个方法**</p><h1 id="慢启动算法"><a href="#慢启动算法" class="headerlink" title="慢启动算法"></a>慢启动算法</h1><ul><li>由小到大逐渐增加发送数据量</li><li>没收到一个报文确认，加一</li></ul><p>1 2 4 8 16 …… </p><p>报文发送是<strong><code>指数增长</code></strong></p><ul><li>慢启动算法增长到<code>**慢启动阈值（ssthresh）</code>** 后停止增长</li></ul><h1 id="拥塞避免算法"><a href="#拥塞避免算法" class="headerlink" title="拥塞避免算法"></a>拥塞避免算法</h1><ul><li>维护一个拥塞窗口的变量</li><li>主要网络不拥塞，就试探着拥塞窗口调大</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>假如慢启动算法到达了慢启动阈值，启动拥塞避免算法，之后增大一个</p><p><strong>可以保证在网络不发生拥塞的前提下发送更多的数据</strong></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%203/Untitled%201.png"  alt="TCP%203/Untitled%201.png"></p><p>慢启动算法和拥塞避免算法的图解</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%203/Untitled%202.png"  alt="TCP%203/Untitled%202.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TCP协议的拥塞控制&quot;&gt;&lt;a href=&quot;#TCP协议的拥塞控制&quot; class=&quot;headerlink&quot; title=&quot;TCP协议的拥塞控制&quot;&gt;&lt;/a&gt;TCP协议的拥塞控制&lt;/h1&gt;&lt;h1 id=&quot;拥塞的原因&quot;&gt;&lt;a href=&quot;#拥塞的原因&quot; class=&quot;he
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/TCP 2</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%202/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%202/</id>
    <published>2020-04-04T05:20:56.320Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TCP协议的流量控制"><a href="#TCP协议的流量控制" class="headerlink" title="TCP协议的流量控制"></a>TCP协议的流量控制</h1><h1 id="流量控制是TCP的特有功能"><a href="#流量控制是TCP的特有功能" class="headerlink" title="流量控制是TCP的特有功能"></a>流量控制是TCP的特有功能</h1><ul><li>流量控制是指让<code>**发送方发送速率不要太快**</code></li></ul><h2 id="流量控制是使用滑动窗口来实现的"><a href="#流量控制是使用滑动窗口来实现的" class="headerlink" title="流量控制是使用滑动窗口来实现的"></a>流量控制是使用<strong>滑动窗口</strong>来实现的</h2><h1 id="窗口"><a href="#窗口" class="headerlink" title="窗口"></a>窗口</h1><p>发送方可以发送从501-1500之间的字节</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%202/Untitled.png"  alt="TCP%202/Untitled.png"></p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h3 id="通过窗口大小控制对方的发送速率"><a href="#通过窗口大小控制对方的发送速率" class="headerlink" title="通过窗口大小控制对方的发送速率"></a>通过窗口大小控制对方的发送速率</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%202/Untitled%201.png"  alt="TCP%202/Untitled%201.png"></p><h3 id="接收方调整窗口大小-告知发送方"><a href="#接收方调整窗口大小-告知发送方" class="headerlink" title="接收方调整窗口大小 告知发送方"></a>接收方调整窗口大小 告知发送方</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%202/Untitled%202.png"  alt="TCP%202/Untitled%202.png"></p><h3 id="接收方发送调整窗口的消息丢失"><a href="#接收方发送调整窗口的消息丢失" class="headerlink" title="接收方发送调整窗口的消息丢失"></a>接收方发送调整窗口的消息丢失</h3><p>发送方会一直等待，接收方也会一直等待发送方的发送消息——形成死锁</p><p>TCP可靠消息都是对数据字节确认的，窗口大小的特殊消息没有可靠传输</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%202/Untitled%203.png"  alt="TCP%202/Untitled%203.png"></p><h1 id="坚持定时器"><a href="#坚持定时器" class="headerlink" title="坚持定时器"></a>坚持定时器</h1><ul><li>当接收到窗口为0的消息，则启动<code>**坚持定时器**</code></li><li>坚持定时器每隔一段时间发送一个<code>**窗口探测报文**</code></li><li>解决死锁的局面</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TCP协议的流量控制&quot;&gt;&lt;a href=&quot;#TCP协议的流量控制&quot; class=&quot;headerlink&quot; title=&quot;TCP协议的流量控制&quot;&gt;&lt;/a&gt;TCP协议的流量控制&lt;/h1&gt;&lt;h1 id=&quot;流量控制是TCP的特有功能&quot;&gt;&lt;a href=&quot;#流量控制是TCP
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/TCP 1</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%201/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%201/</id>
    <published>2020-04-04T05:20:56.317Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TCP协议的可靠传输"><a href="#TCP协议的可靠传输" class="headerlink" title="TCP协议的可靠传输"></a>TCP协议的可靠传输</h1><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ul><li>TCP的可靠传输基于连续ARQ协议</li><li>TCP的滑动窗口以字节为单位</li></ul><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h3 id="部分字节未发送确认"><a href="#部分字节未发送确认" class="headerlink" title="部分字节未发送确认"></a>部分字节未发送确认</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%201/Untitled.png"  alt="TCP%201/Untitled.png"></p><p>经过一段时间之后，部分字节已经确认</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%201/Untitled%201.png"  alt="TCP%201/Untitled%201.png"></p><p>可用窗口减少为5</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%201/Untitled%202.png"  alt="TCP%201/Untitled%202.png"></p><h3 id="所有发送的字节都没收到确认——可用窗口-0"><a href="#所有发送的字节都没收到确认——可用窗口-0" class="headerlink" title="所有发送的字节都没收到确认——可用窗口=0"></a>所有发送的字节都没收到确认——可用窗口=0</h3><p>滑动窗口不能往前推进</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%201/Untitled%203.png"  alt="TCP%201/Untitled%203.png"></p><p>超时之后仍然没有收到23、24的消息，需要从23开始<strong>重新传输，25、27又需要重新传输</strong></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%201/Untitled%204.png"  alt="TCP%201/Untitled%204.png"></p><h1 id="选择重传"><a href="#选择重传" class="headerlink" title="选择重传"></a>选择重传</h1><h3 id="1-选择重传需要指定需要重传的字节"><a href="#1-选择重传需要指定需要重传的字节" class="headerlink" title="1. 选择重传需要指定需要重传的字节"></a>1. 选择重传需要指定需要重传的字节</h3><h3 id="2-每一个字节都有唯一的32位序号"><a href="#2-每一个字节都有唯一的32位序号" class="headerlink" title="2. 每一个字节都有唯一的32位序号"></a>2. 每一个字节都有唯一的32位序号</h3><p>TCP协议中并没有专门存储指定重传字节的内容的位置，存储序号也比较耗费空间</p><ul><li>TCP选项最多40个字节只能包含10个序号</li><li>TCP的报文一次可以传输很多个字节（滑动窗口，一般传输上百或者上千个字节）</li><li>一般出错就是整个TCP报文都丢失了——一段字节</li><li>选择重传需要的是重传的序号的<strong>边界</strong></li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%201/Untitled%205.png"  alt="TCP%201/Untitled%205.png"></p><ul><li><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP%201/Untitled%206.png"  alt="TCP%201/Untitled%206.png"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TCP协议的可靠传输&quot;&gt;&lt;a href=&quot;#TCP协议的可靠传输&quot; class=&quot;headerlink&quot; title=&quot;TCP协议的可靠传输&quot;&gt;&lt;/a&gt;TCP协议的可靠传输&lt;/h1&gt;&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerli
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/Untitled 12</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2012/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2012/</id>
    <published>2020-04-04T05:20:56.314Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="可靠传输的基本原理"><a href="#可靠传输的基本原理" class="headerlink" title="可靠传输的基本原理"></a>可靠传输的基本原理</h1><h1 id="停止等待协议"><a href="#停止等待协议" class="headerlink" title="停止等待协议"></a>停止等待协议</h1><blockquote><p>停止等待协议通过<code>**超时重传**</code>保证<strong>可靠传输</strong></p></blockquote><h2 id="无差错条件下"><a href="#无差错条件下" class="headerlink" title="无差错条件下"></a>无差错条件下</h2><p>发送方发送一个消息之后等待接收方消息确认之后再发送第二个消息</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2012/Untitled.png"  alt="Untitled%2012/Untitled.png"></p><h2 id="出错情况一——发送的消息在路上丢失"><a href="#出错情况一——发送的消息在路上丢失" class="headerlink" title="出错情况一——发送的消息在路上丢失"></a>出错情况一——发送的消息在路上丢失</h2><p>发送方发送消息之后等待确认消息，等待一段时间之后并没有收到确认消息，会导致超时重传</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2012/Untitled%201.png"  alt="Untitled%2012/Untitled%201.png"></p><h2 id="出错情况二——确认的消息在路上丢失"><a href="#出错情况二——确认的消息在路上丢失" class="headerlink" title="出错情况二——确认的消息在路上丢失"></a>出错情况二——确认的消息在路上丢失</h2><p>同样也需要超时重传</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2012/Untitled%202.png"  alt="Untitled%2012/Untitled%202.png"></p><h2 id="出错情况三——确认的消息很久才到"><a href="#出错情况三——确认的消息很久才到" class="headerlink" title="出错情况三——确认的消息很久才到"></a>出错情况三——确认的消息很久才到</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2012/Untitled%203.png"  alt="Untitled%2012/Untitled%203.png"></p><h2 id="实现方式——超时定时器"><a href="#实现方式——超时定时器" class="headerlink" title="实现方式——超时定时器"></a>实现方式——超时定时器</h2><ul><li>每发送一个消息，都需要设置一个定时器——<strong>超时定时器</strong></li><li>TCP协议中一共有<strong>四个定时器</strong></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>停止等待协议是最简单的可靠传输协议</li><li>对<code>**信道的利用效率不高**</code></li></ul><h1 id="连续ARQ协议"><a href="#连续ARQ协议" class="headerlink" title="连续ARQ协议"></a>连续ARQ协议</h1><h2 id="利用效率高"><a href="#利用效率高" class="headerlink" title="利用效率高"></a>利用效率高</h2><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2012/Untitled%204.png"  alt="Untitled%2012/Untitled%204.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2012/Untitled%205.png"  alt="Untitled%2012/Untitled%205.png"></p><p><strong>连续发送了6个报文，假设收到了1、2两个，窗口向前移动两个位置，再发送7、8两个报文，等确认消息到达之后再往后发送，批量发送的报文称为窗口，而可以滑动的窗口称为滑动窗口</strong></p><ul><li><code>**滑动窗口**</code> 向前推动发送</li><li>不需要对每个报文进行确认，采用<strong>累计确认</strong>的方法</li></ul><p>比如收到了5的确认消息就代表5之前的消息都被接收，窗口向前推进五格，窗口可以发送7-11这五个数据</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2012/Untitled%206.png"  alt="Untitled%2012/Untitled%206.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;可靠传输的基本原理&quot;&gt;&lt;a href=&quot;#可靠传输的基本原理&quot; class=&quot;headerlink&quot; title=&quot;可靠传输的基本原理&quot;&gt;&lt;/a&gt;可靠传输的基本原理&lt;/h1&gt;&lt;h1 id=&quot;停止等待协议&quot;&gt;&lt;a href=&quot;#停止等待协议&quot; class=&quot;head
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/TCP</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/</id>
    <published>2020-04-04T05:20:56.310Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h1><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>Transmission Control Protocol</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/Untitled.png"  alt="TCP/Untitled.png"></p><h1 id="位置、组成"><a href="#位置、组成" class="headerlink" title="位置、组成"></a>位置、组成</h1><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/Untitled%201.png"  alt="TCP/Untitled%201.png"></p><h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><h2 id="1-TCP是-面向连接-的协议"><a href="#1-TCP是-面向连接-的协议" class="headerlink" title="1. TCP是**面向连接**的协议"></a>1. TCP是<code>**面向连接**</code>的协议</h2><h2 id="2-TCP的一个连接有两端（点对点服务）"><a href="#2-TCP的一个连接有两端（点对点服务）" class="headerlink" title="2. TCP的一个连接有两端（点对点服务）"></a>2. TCP的一个连接有两端（点对点服务）</h2><h2 id="3-TCP提供可靠的传输服务"><a href="#3-TCP提供可靠的传输服务" class="headerlink" title="3. TCP提供可靠的传输服务"></a>3. TCP提供可靠的传输服务</h2><h2 id="4-TCP协议提供全双工的通信"><a href="#4-TCP协议提供全双工的通信" class="headerlink" title="4. TCP协议提供全双工的通信"></a>4. TCP协议提供<code>全双工</code>的通信</h2><h2 id="5-TCP是面向字节流的协议"><a href="#5-TCP是面向字节流的协议" class="headerlink" title="5. TCP是面向字节流的协议"></a>5. TCP是面向<code>字节流</code>的协议</h2><p>TCP将数据报看成字节流，可能取出数据段的某一段传输，另一部分放在第二个数据报中传输</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/Untitled%202.png"  alt="TCP/Untitled%202.png"></p><h1 id="TCP协议的首部"><a href="#TCP协议的首部" class="headerlink" title="TCP协议的首部"></a>TCP协议的首部</h1><p><code>**固定**</code>20个字节</p><p>UDP 8个字节</p><p>IP协议，固定20个字节的长度</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/Untitled%203.png"  alt="TCP/Untitled%203.png"></p><h2 id="序号"><a href="#序号" class="headerlink" title="序号"></a>序号</h2><ul><li>范围0~ 2^32-1</li><li>一个字节一个序号</li><li>数据首字节序号</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/Untitled%204.png"  alt="TCP/Untitled%204.png"></p><h2 id="确认号"><a href="#确认号" class="headerlink" title="确认号"></a>确认号</h2><ul><li>范围0~ 2^32-1</li><li>一个字节一个序号</li><li>期待收到的数据首字节序号</li><li>配合序号使用</li><li><strong>确认号为N，则表示N-1序号的数据都已收到</strong></li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/Untitled%205.png"  alt="TCP/Untitled%205.png"></p><h2 id="数据偏移"><a href="#数据偏移" class="headerlink" title="数据偏移"></a>数据偏移</h2><ul><li>占4位：0~15，单位是  32位字（每个偏移都可以表示4个字节的偏移）</li><li>数据偏离首部的距离——表达真实的数据偏离头部的位置</li><li>TCP数据报固定20字节，</li></ul><p>运算，15*4 = 60字节，TCP的长度可以为20-60字节</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/Untitled%206.png"  alt="TCP/Untitled%206.png"></p><h2 id="TCP标记"><a href="#TCP标记" class="headerlink" title="TCP标记"></a>TCP标记</h2><ul><li>占6位，每位都有不同的意义</li><li>URG <code>紧急位</code> URGENT =1 , 紧急数据</li><li>ACK <code>确认位</code> Acknowledgement=1，确认号才生效</li><li>PSH <code>推送位</code> Push=1，尽快把数据交付给应用层</li><li>RST <code>重置位</code> Reset =1, 重新建立连接</li><li>SYN <code>同步位</code> Synchronization =1 表示连接请求报文</li><li>FIN <code>终止位</code>  Finish =1 表示 释放连接</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/Untitled%207.png"  alt="TCP/Untitled%207.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/Untitled%208.png"  alt="TCP/Untitled%208.png"></p><h2 id="窗口"><a href="#窗口" class="headerlink" title="窗口"></a>窗口</h2><ul><li>占16位 ： 0~ 2^16-1</li><li>窗口指明允许对方发送的数据量</li></ul><p>与<code>确认号</code>结合，确认号是501，窗口是1000（对方可以发送1000个字节给我），意味着501-1500的长度的字节都可以接受？？</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/Untitled%209.png"  alt="TCP/Untitled%209.png"></p><h2 id="校验和"><a href="#校验和" class="headerlink" title="校验和"></a>校验和</h2><p>与UDP相同</p><h2 id="紧急指针"><a href="#紧急指针" class="headerlink" title="紧急指针"></a>紧急指针</h2><ul><li>紧急数据 <code>URG = 1</code></li><li>指定紧急数据在报文的位置</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/TCP/Untitled%2010.png"  alt="TCP/Untitled%2010.png"></p><h2 id="TCP选项"><a href="#TCP选项" class="headerlink" title="TCP选项"></a>TCP选项</h2><ul><li><code>**最多**</code> 40 字节</li><li>支持未来的拓展</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TCP协议&quot;&gt;&lt;a href=&quot;#TCP协议&quot; class=&quot;headerlink&quot; title=&quot;TCP协议&quot;&gt;&lt;/a&gt;TCP协议&lt;/h1&gt;&lt;h1 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/UDP</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/UDP/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/UDP/</id>
    <published>2020-04-04T05:20:56.307Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h1><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><ul><li>User Datagram Protocal</li><li>UDP是个非常简单的协议</li><li>长度主要由应用层给的数据报文的长度决定</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/UDP/Untitled.png"  alt="UDP/Untitled.png"></p><h1 id="位置、组成"><a href="#位置、组成" class="headerlink" title="位置、组成"></a>位置、组成</h1><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/UDP/Untitled%201.png"  alt="UDP/Untitled%201.png"></p><h2 id="UDP首部"><a href="#UDP首部" class="headerlink" title="UDP首部"></a>UDP首部</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/UDP/Untitled%202.png"  alt="UDP/Untitled%202.png"></p><h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><h3 id="1-UDP是-无连接-协议"><a href="#1-UDP是-无连接-协议" class="headerlink" title="1. UDP是**无连接**协议"></a>1. UDP是<code>**无连接**</code>协议</h3><p>不需要建立连接就可以发送</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/UDP/Untitled%203.png"  alt="UDP/Untitled%203.png"></p><h3 id="2-UDP不能保证可靠的交付数据"><a href="#2-UDP不能保证可靠的交付数据" class="headerlink" title="2. UDP不能保证可靠的交付数据"></a>2. UDP不能保证可靠的交付数据</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/UDP/Untitled%204.png"  alt="UDP/Untitled%204.png"></p><h3 id="3-UDP是面向报文传输的"><a href="#3-UDP是面向报文传输的" class="headerlink" title="3. UDP是面向报文传输的"></a>3. UDP是面向报文传输的</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/UDP/Untitled%205.png"  alt="UDP/Untitled%205.png"></p><h3 id="4-UDP没有拥塞控制"><a href="#4-UDP没有拥塞控制" class="headerlink" title="4. UDP没有拥塞控制"></a>4. UDP没有拥塞控制</h3><p>不会感知网络是否拥塞，都会尽量将数据交付</p><h3 id="5-UDP的首部开销很小"><a href="#5-UDP的首部开销很小" class="headerlink" title="5. UDP的首部开销很小"></a>5. UDP的首部开销很小</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;UDP协议&quot;&gt;&lt;a href=&quot;#UDP协议&quot; class=&quot;headerlink&quot; title=&quot;UDP协议&quot;&gt;&lt;/a&gt;UDP协议&lt;/h1&gt;&lt;h1 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/Untitled 11</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2011/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2011/</id>
    <published>2020-04-04T05:20:56.303Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>管理端到端的连接</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2011/Untitled.png"  alt="Untitled%2011/Untitled.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2011/Untitled%201.png"  alt="Untitled%2011/Untitled%201.png"></p><p>传输层解决进程与进程之间的通信（跨设备、跨网络）</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2011/Untitled%202.png"  alt="Untitled%2011/Untitled%202.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2011/Untitled%203.png"  alt="Untitled%2011/Untitled%203.png"></p><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><ul><li>端口标记不同的进程</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2011/Untitled%204.png"  alt="Untitled%2011/Untitled%204.png"></p><h2 id="UDP和TCP"><a href="#UDP和TCP" class="headerlink" title="UDP和TCP"></a>UDP和TCP</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2011/Untitled%205.png"  alt="Untitled%2011/Untitled%205.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;p&gt;管理端
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/BGP</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/BGP/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/BGP/</id>
    <published>2020-04-04T05:20:56.300Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="外部网关路由协议之BGP协议"><a href="#外部网关路由协议之BGP协议" class="headerlink" title="外部网关路由协议之BGP协议"></a>外部网关路由协议之BGP协议</h1><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/BGP/Untitled.png"  alt="BGP/Untitled.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/BGP/Untitled%201.png"  alt="BGP/Untitled%201.png"></p><p>考虑到网络特性之外的因素</p><h1 id="目的-使用原因"><a href="#目的-使用原因" class="headerlink" title="目的\使用原因"></a>目的\使用原因</h1><ul><li>互联网的规模很大</li><li>AS内部使用不同的路由协议</li><li>AS之间需要考虑除网络特性之外的一些因素</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/BGP/Untitled%202.png"  alt="BGP/Untitled%202.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/BGP/Untitled%203.png"  alt="BGP/Untitled%203.png"></p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><ol><li><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/BGP/Untitled%204.png"  alt="BGP/Untitled%204.png"></p></li><li></li></ol><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/BGP/Untitled%205.png"  alt="BGP/Untitled%205.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><strong>BGP协议能找到一条到达目的比较好的路由</strong></li><li><strong>AS之间通过BGP发言人来进行路由信息的交换</strong></li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/BGP/Untitled%206.png"  alt="BGP/Untitled%206.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;外部网关路由协议之BGP协议&quot;&gt;&lt;a href=&quot;#外部网关路由协议之BGP协议&quot; class=&quot;headerlink&quot; title=&quot;外部网关路由协议之BGP协议&quot;&gt;&lt;/a&gt;外部网关路由协议之BGP协议&lt;/h1&gt;&lt;h1 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/OSPF</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/OSPF/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/OSPF/</id>
    <published>2020-04-04T05:20:56.296Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内部网关路由协议之OSPF协议"><a href="#内部网关路由协议之OSPF协议" class="headerlink" title="内部网关路由协议之OSPF协议"></a>内部网关路由协议之OSPF协议</h1><h1 id="链路状态协议LS"><a href="#链路状态协议LS" class="headerlink" title="链路状态协议LS"></a>链路状态协议LS</h1><h2 id="RIP特点"><a href="#RIP特点" class="headerlink" title="RIP特点"></a>RIP特点</h2><ul><li>只和相邻路由器交换信息</li><li>消息描述该路由器与相邻路由器的链路状态</li><li>相比之下,RIP协议只交流相邻路由器的跳数hop</li></ul><h2 id="链路状态LS协议"><a href="#链路状态LS协议" class="headerlink" title="链路状态LS协议"></a>链路状态LS协议</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/OSPF/Untitled.png"  alt="OSPF/Untitled.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/OSPF/Untitled%201.png"  alt="OSPF/Untitled%201.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/OSPF/Untitled%202.png"  alt="OSPF/Untitled%202.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/OSPF/Untitled%203.png"  alt="OSPF/Untitled%203.png"></p><h1 id="OSPF协议的过程"><a href="#OSPF协议的过程" class="headerlink" title="OSPF协议的过程"></a>OSPF协议的过程</h1><ul><li><code>**Open Shortest Path First**</code> 开放最短路径优先</li><li>核心是Dijkstra算法</li></ul><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol><li><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/OSPF/Untitled%204.png"  alt="OSPF/Untitled%204.png"></p></li></ol><p>2.</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/OSPF/Untitled%205.png"  alt="OSPF/Untitled%205.png"></p><ol start="3"><li><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/OSPF/Untitled%206.png"  alt="OSPF/Untitled%206.png"></p></li></ol><h2 id="五种消息类型"><a href="#五种消息类型" class="headerlink" title="五种消息类型"></a>五种消息类型</h2><h3 id="问候消息Hello"><a href="#问候消息Hello" class="headerlink" title="问候消息Hello"></a>问候消息Hello</h3><h3 id="链路状态数据库描述信息"><a href="#链路状态数据库描述信息" class="headerlink" title="链路状态数据库描述信息"></a>链路状态数据库描述信息</h3><h3 id="链路状态请求信息"><a href="#链路状态请求信息" class="headerlink" title="链路状态请求信息"></a>链路状态请求信息</h3><h3 id="链路状态更新信息"><a href="#链路状态更新信息" class="headerlink" title="链路状态更新信息"></a>链路状态更新信息</h3><h3 id="链路状态确认信息"><a href="#链路状态确认信息" class="headerlink" title="链路状态确认信息"></a>链路状态确认信息</h3><h2 id="完整过程"><a href="#完整过程" class="headerlink" title="完整过程"></a>完整过程</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/OSPF/Untitled%207.png"  alt="OSPF/Untitled%207.png"></p><h2 id="对比RIP协议-理解记忆"><a href="#对比RIP协议-理解记忆" class="headerlink" title="对比RIP协议(理解记忆)"></a>对比RIP协议(理解记忆)</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/OSPF/Untitled%208.png"  alt="OSPF/Untitled%208.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;内部网关路由协议之OSPF协议&quot;&gt;&lt;a href=&quot;#内部网关路由协议之OSPF协议&quot; class=&quot;headerlink&quot; title=&quot;内部网关路由协议之OSPF协议&quot;&gt;&lt;/a&gt;内部网关路由协议之OSPF协议&lt;/h1&gt;&lt;h1 id=&quot;链路状态协议LS&quot;&gt;&lt;a 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/Dijkstra</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Dijkstra/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Dijkstra/</id>
    <published>2020-04-04T05:20:56.293Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Dijkstra迪杰斯特拉算法"><a href="#Dijkstra迪杰斯特拉算法" class="headerlink" title="Dijkstra迪杰斯特拉算法"></a>Dijkstra迪杰斯特拉算法</h1><h1 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h1><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Dijkstra/Untitled.png"  alt="Dijkstra/Untitled.png"></p><h1 id="最短路径问题"><a href="#最短路径问题" class="headerlink" title="最短路径问题"></a>最短路径问题</h1><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Dijkstra/Untitled%201.png"  alt="Dijkstra/Untitled%201.png"></p><h1 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h1><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Dijkstra/Untitled%202.png"  alt="Dijkstra/Untitled%202.png"></p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>初始化</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Dijkstra/Untitled%203.png"  alt="Dijkstra/Untitled%203.png"></p><p>U不为空</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Dijkstra/Untitled%204.png"  alt="Dijkstra/Untitled%204.png"></p><p>计算决定是否更新U</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Dijkstra/Untitled%205.png"  alt="Dijkstra/Untitled%205.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Dijkstra/Untitled%206.png"  alt="Dijkstra/Untitled%206.png"></p><p>计算刚刚添加的 A→D</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Dijkstra/Untitled%207.png"  alt="Dijkstra/Untitled%207.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Dijkstra/Untitled%208.png"  alt="Dijkstra/Untitled%208.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Dijkstra迪杰斯特拉算法&quot;&gt;&lt;a href=&quot;#Dijkstra迪杰斯特拉算法&quot; class=&quot;headerlink&quot; title=&quot;Dijkstra迪杰斯特拉算法&quot;&gt;&lt;/a&gt;Dijkstra迪杰斯特拉算法&lt;/h1&gt;&lt;h1 id=&quot;概览&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/RIP</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/</id>
    <published>2020-04-04T05:20:56.289Z</published>
    <updated>2020-04-03T21:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内部网关路由协议的RIP协议"><a href="#内部网关路由协议的RIP协议" class="headerlink" title="内部网关路由协议的RIP协议"></a>内部网关路由协议的RIP协议</h1><h1 id="距离矢量DV算法"><a href="#距离矢量DV算法" class="headerlink" title="距离矢量DV算法"></a>距离矢量DV算法</h1><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled.png"  alt="RIP/Untitled.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%201.png"  alt="RIP/Untitled%201.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%202.png"  alt="RIP/Untitled%202.png"></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%203.png"  alt="RIP/Untitled%203.png"></p><p>距离矢量信息可能是过时的,导致两个方向的距离不同</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%204.png"  alt="RIP/Untitled%204.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%205.png"  alt="RIP/Untitled%205.png"></p><p>计算完成之后跟自己的距离矢量进行比较</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%206.png"  alt="RIP/Untitled%206.png"></p><p>设置下一跳</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%207.png"  alt="RIP/Untitled%207.png"></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%208.png"  alt="RIP/Untitled%208.png"></p></li></ol><p>2.</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%209.png"  alt="RIP/Untitled%209.png"></p><h1 id="RIP协议的过程"><a href="#RIP协议的过程" class="headerlink" title="RIP协议的过程"></a>RIP协议的过程</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%2010.png"  alt="RIP/Untitled%2010.png"></p><h2 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h2><ul><li>每隔<code>30</code>s交换一次路由信息</li><li>跳数&gt;<code>15</code> 就是不可达路由</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%2011.png"  alt="RIP/Untitled%2011.png"></p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%2012.png"  alt="RIP/Untitled%2012.png"></p><h3 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h3><ul><li>第一步 路由器的初始化路由表</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%2013.png"  alt="RIP/Untitled%2013.png"></p><ul><li>第二步</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%2014.png"  alt="RIP/Untitled%2014.png"></p><ul><li>第三步</li><li>目的地|距离|下一跳</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%2015.png"  alt="RIP/Untitled%2015.png"></p><h1 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h1><h2 id="故障信息传递慢"><a href="#故障信息传递慢" class="headerlink" title="故障信息传递慢"></a>故障信息传递慢</h2><p>路由器随便相信相邻节点的信息</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/RIP/Untitled%2016.png"  alt="RIP/Untitled%2016.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>实现简单,开销小</li><li>限制了网络的规模</li><li>故障信息诊断慢</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;内部网关路由协议的RIP协议&quot;&gt;&lt;a href=&quot;#内部网关路由协议的RIP协议&quot; class=&quot;headerlink&quot; title=&quot;内部网关路由协议的RIP协议&quot;&gt;&lt;/a&gt;内部网关路由协议的RIP协议&lt;/h1&gt;&lt;h1 id=&quot;距离矢量DV算法&quot;&gt;&lt;a href
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/Untitled 10</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2010/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2010/</id>
    <published>2020-04-04T05:20:56.286Z</published>
    <updated>2020-04-03T21:17:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络层的路由概述"><a href="#网络层的路由概述" class="headerlink" title="网络层的路由概述"></a>网络层的路由概述</h1><h2 id="数据传输的过程"><a href="#数据传输的过程" class="headerlink" title="数据传输的过程"></a>数据传输的过程</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2010/Untitled.png"  alt="Untitled%2010/Untitled.png"></p><h1 id="网络拓扑"><a href="#网络拓扑" class="headerlink" title="网络拓扑"></a>网络拓扑</h1><ul><li>每一个顶点表示一个网络,路由器或者计算机</li><li>每一个条边表示一条网络路径</li><li>路由算法的本质是图论的算法</li><li>网络抖动</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2010/Untitled%201.png"  alt="Untitled%2010/Untitled%201.png"></p><h2 id="算法要求"><a href="#算法要求" class="headerlink" title="算法要求"></a>算法要求</h2><ul><li>算法 <strong><code>正确</code></strong>, <strong><code>完整</code></strong></li><li>计算上尽可能<code>**简单**</code></li><li><code>**适应网络中的变化**</code></li><li>算法必须是<code>**稳定**</code>的,<code>**公平**</code>的</li></ul><h2 id="对互联网进行划分"><a href="#对互联网进行划分" class="headerlink" title="对互联网进行划分"></a>对互联网进行划分</h2><h3 id="自治系统-AS"><a href="#自治系统-AS" class="headerlink" title="自治系统 AS"></a>自治系统 AS</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2010/Untitled%202.png"  alt="Untitled%2010/Untitled%202.png"></p><h3 id="内部网关协议-外部网关协议"><a href="#内部网关协议-外部网关协议" class="headerlink" title="内部网关协议\外部网关协议"></a>内部网关协议\外部网关协议</h3><ul><li>内部网关协议 RIP\OSPF</li><li>外部网关协议 BGP</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/Untitled%2010/Untitled%203.png"  alt="Untitled%2010/Untitled%203.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;网络层的路由概述&quot;&gt;&lt;a href=&quot;#网络层的路由概述&quot; class=&quot;headerlink&quot; title=&quot;网络层的路由概述&quot;&gt;&lt;/a&gt;网络层的路由概述&lt;/h1&gt;&lt;h2 id=&quot;数据传输的过程&quot;&gt;&lt;a href=&quot;#数据传输的过程&quot; class=&quot;header
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/ICMP</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/</id>
    <published>2020-04-04T05:20:56.283Z</published>
    <updated>2020-04-03T21:17:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ICMP协议"><a href="#ICMP协议" class="headerlink" title="ICMP协议"></a>ICMP协议</h1><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>网际控制报文协议(Internet Control Message Protocol)</p><ul><li>主要是<code>**进行网络中传输的错误和异常的报告**</code></li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/Untitled.png"  alt="ICMP/Untitled.png"></p><p>ICMP封装在IP数据报</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/Untitled%201.png"  alt="ICMP/Untitled%201.png"></p><h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/Untitled%202.png"  alt="ICMP/Untitled%202.png"></p><h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/Untitled%203.png"  alt="ICMP/Untitled%203.png"></p><h1 id="种类"><a href="#种类" class="headerlink" title="种类"></a>种类</h1><h3 id="差错报告报文"><a href="#差错报告报文" class="headerlink" title="差错报告报文"></a>差错报告报文</h3><p>多用</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/Untitled%204.png"  alt="ICMP/Untitled%204.png"></p><h3 id="询问报文"><a href="#询问报文" class="headerlink" title="询问报文"></a>询问报文</h3><ul><li>时间同步</li></ul><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/Untitled%205.png"  alt="ICMP/Untitled%205.png"></p><h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h1><h2 id="Ping-应用"><a href="#Ping-应用" class="headerlink" title="Ping 应用"></a>Ping 应用</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>ping发出的报文的长度是32字节, IP首部+ICMP报文的长度</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/Untitled%206.png"  alt="ICMP/Untitled%206.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/Untitled%207.png"  alt="ICMP/Untitled%207.png"></p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li>ping回环127.0.0.1</li><li>ping网关地址</li><li>ping远端地址</li></ul><h1 id="Traceroute"><a href="#Traceroute" class="headerlink" title="Traceroute"></a>Traceroute</h1><p>探测IP数据报在网络中走过的路径</p><p>利用了TTL和ICMP差错不可达的原理</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/Untitled%208.png"  alt="ICMP/Untitled%208.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ICMP/Untitled%209.png"  alt="ICMP/Untitled%209.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ICMP协议&quot;&gt;&lt;a href=&quot;#ICMP协议&quot; class=&quot;headerlink&quot; title=&quot;ICMP协议&quot;&gt;&lt;/a&gt;ICMP协议&lt;/h1&gt;&lt;h1 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/NAT</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/NAT/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/NAT/</id>
    <published>2020-04-04T05:20:56.280Z</published>
    <updated>2020-04-03T21:17:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络地址转换NAT技术"><a href="#网络地址转换NAT技术" class="headerlink" title="网络地址转换NAT技术"></a>网络地址转换NAT技术</h1><h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/NAT/Untitled.png"  alt="NAT/Untitled.png"></p><h2 id="IP地址可以分为内网地址和外网地址"><a href="#IP地址可以分为内网地址和外网地址" class="headerlink" title="IP地址可以分为内网地址和外网地址"></a>IP地址可以分为<code>内网地址</code>和<code>外网地址</code></h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/NAT/Untitled%201.png"  alt="NAT/Untitled%201.png"></p><h2 id="内网地址的分类"><a href="#内网地址的分类" class="headerlink" title="内网地址的分类"></a>内网地址的分类</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/NAT/Untitled%202.png"  alt="NAT/Untitled%202.png"></p><h2 id="外网不知道内网的具体设备发出的请求"><a href="#外网不知道内网的具体设备发出的请求" class="headerlink" title="外网不知道内网的具体设备发出的请求"></a>外网不知道内网的具体设备发出的请求</h2><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><h3 id="网络地址转换技术"><a href="#网络地址转换技术" class="headerlink" title="网络地址转换技术"></a>网络地址转换技术</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/NAT/Untitled%203.png"  alt="NAT/Untitled%203.png"></p><h2 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/NAT/Untitled%204.png"  alt="NAT/Untitled%204.png"></p><h2 id="端口号的转换"><a href="#端口号的转换" class="headerlink" title="端口号的转换"></a>端口号的转换</h2><h3 id="NA-P-T表"><a href="#NA-P-T表" class="headerlink" title="NA(P)T表"></a>NA(P)T表</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/NAT/Untitled%205.png"  alt="NAT/Untitled%205.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;网络地址转换NAT技术&quot;&gt;&lt;a href=&quot;#网络地址转换NAT技术&quot; class=&quot;headerlink&quot; title=&quot;网络地址转换NAT技术&quot;&gt;&lt;/a&gt;网络地址转换NAT技术&lt;/h1&gt;&lt;h1 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;head
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/IP 2</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/</id>
    <published>2020-04-04T05:20:56.277Z</published>
    <updated>2020-04-03T21:17:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IP地址的子网划分"><a href="#IP地址的子网划分" class="headerlink" title="IP地址的子网划分"></a>IP地址的子网划分</h1><h1 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h1><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled.png"  alt="IP%202/Untitled.png"></p><h1 id="分类的IP地址"><a href="#分类的IP地址" class="headerlink" title="分类的IP地址"></a>分类的IP地址</h1><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%201.png"  alt="IP%202/Untitled%201.png"></p><h2 id="网络段"><a href="#网络段" class="headerlink" title="网络段"></a>网络段</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%202.png"  alt="IP%202/Untitled%202.png"></p><h2 id="特殊的主机号"><a href="#特殊的主机号" class="headerlink" title="特殊的主机号"></a>特殊的主机号</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%203.png"  alt="IP%202/Untitled%203.png"></p><h2 id="特殊的网络号"><a href="#特殊的网络号" class="headerlink" title="特殊的网络号"></a>特殊的网络号</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%204.png"  alt="IP%202/Untitled%204.png"></p><h3 id="识别IP地址的分类"><a href="#识别IP地址的分类" class="headerlink" title="识别IP地址的分类"></a>识别IP地址的分类</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%205.png"  alt="IP%202/Untitled%205.png"></p><h3 id="回环地址"><a href="#回环地址" class="headerlink" title="回环地址"></a>回环地址</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%206.png"  alt="IP%202/Untitled%206.png"></p><h2 id="特殊的分类地址"><a href="#特殊的分类地址" class="headerlink" title="特殊的分类地址"></a>特殊的分类地址</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%207.png"  alt="IP%202/Untitled%207.png"></p><h1 id="划分子网"><a href="#划分子网" class="headerlink" title="划分子网"></a>划分子网</h1><p>示例：</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%208.png"  alt="IP%202/Untitled%208.png"></p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%209.png"  alt="IP%202/Untitled%209.png"></p><h2 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h2><h3 id="作用：快速判断IP是属于哪个网络号"><a href="#作用：快速判断IP是属于哪个网络号" class="headerlink" title="作用：快速判断IP是属于哪个网络号"></a>作用：快速判断IP是属于哪个网络号</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%2010.png"  alt="IP%202/Untitled%2010.png"></p><h2 id="得到IP地址的网络号"><a href="#得到IP地址的网络号" class="headerlink" title="得到IP地址的网络号"></a>得到IP地址的网络号</h2><p>将IP地址和子网掩码 进行 与 运算</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%2011.png"  alt="IP%202/Untitled%2011.png"></p><h1 id="无分类编址CIDR"><a href="#无分类编址CIDR" class="headerlink" title="无分类编址CIDR"></a>无分类编址CIDR</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><blockquote><p>网络前缀是任意位数的</p></blockquote><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%2012.png"  alt="IP%202/Untitled%2012.png"></p><h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%2013.png"  alt="IP%202/Untitled%2013.png"></p><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><h3 id="相比原来的子网划分更加灵活"><a href="#相比原来的子网划分更加灵活" class="headerlink" title="相比原来的子网划分更加灵活"></a>相比原来的子网划分更加灵活</h3><p>子网掩码、特殊的网络号、特殊的地址号 主机号 通用</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%2014.png"  alt="IP%202/Untitled%2014.png"></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ol><li><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%2015.png"  alt="IP%202/Untitled%2015.png"></p></li><li></li></ol><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%2016.png"  alt="IP%202/Untitled%2016.png"></p><ol start="3"><li>城市的IP CIDR规划</li></ol><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/IP%202/Untitled%2017.png"  alt="IP%202/Untitled%2017.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;IP地址的子网划分&quot;&gt;&lt;a href=&quot;#IP地址的子网划分&quot; class=&quot;headerlink&quot; title=&quot;IP地址的子网划分&quot;&gt;&lt;/a&gt;IP地址的子网划分&lt;/h1&gt;&lt;h1 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>笔记/Untitled 1/Untitled/ARP RARP</title>
    <link href="https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/"/>
    <id>https://onenote.netlify.com/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/</id>
    <published>2020-04-04T05:20:56.274Z</published>
    <updated>2020-04-03T21:17:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ARP协议与RARP协议"><a href="#ARP协议与RARP协议" class="headerlink" title="ARP协议与RARP协议"></a>ARP协议与RARP协议</h1><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled.png"  alt="ARP%20RARP/Untitled.png"></p><h1 id="APR协议"><a href="#APR协议" class="headerlink" title="APR协议"></a>APR协议</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%201.png"  alt="ARP%20RARP/Untitled%201.png"></p><h2 id="ARP缓存表"><a href="#ARP缓存表" class="headerlink" title="ARP缓存表"></a>ARP缓存表</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%202.png"  alt="ARP%20RARP/Untitled%202.png"></p><h2 id="APR缓存表的使用"><a href="#APR缓存表的使用" class="headerlink" title="APR缓存表的使用"></a>APR缓存表的使用</h2><h3 id="缓存了MAC和IP-的关系"><a href="#缓存了MAC和IP-的关系" class="headerlink" title="缓存了MAC和IP 的关系"></a>缓存了MAC和IP 的关系</h3><p>A只需要查询ARP缓存表就能查询E</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%203.png"  alt="ARP%20RARP/Untitled%203.png"></p><h3 id="没有缓存"><a href="#没有缓存" class="headerlink" title="没有缓存"></a>没有缓存</h3><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%204.png"  alt="ARP%20RARP/Untitled%204.png"></p><h2 id="ARP缓存表的作用"><a href="#ARP缓存表的作用" class="headerlink" title="ARP缓存表的作用"></a>ARP缓存表的作用</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%205.png"  alt="ARP%20RARP/Untitled%205.png"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>ARP缓存表中的记录并不是永久有效的</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%206.png"  alt="ARP%20RARP/Untitled%206.png"></p><h2 id="ARP协议的报文信息"><a href="#ARP协议的报文信息" class="headerlink" title="ARP协议的报文信息"></a>ARP协议的报文信息</h2><p>直接封装到数据链路层的规则里面</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%207.png"  alt="ARP%20RARP/Untitled%207.png"></p><p>ARP协议 使用到了IP地址，因此属于网络层的内容</p><h1 id="RARP协议"><a href="#RARP协议" class="headerlink" title="RARP协议"></a>RARP协议</h1><p>目前很少用</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%208.png"  alt="ARP%20RARP/Untitled%208.png"></p><h2 id="RARP结构"><a href="#RARP结构" class="headerlink" title="RARP结构"></a>RARP结构</h2><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%209.png"  alt="ARP%20RARP/Untitled%209.png"></p><h2 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h2><ol><li><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%2010.png"  alt="ARP%20RARP/Untitled%2010.png"></p></li><li></li></ol><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%2011.png"  alt="ARP%20RARP/Untitled%2011.png"></p><ol start="3"><li><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%2012.png"  alt="ARP%20RARP/Untitled%2012.png"></p></li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>协调网络层和数据链路层工作</p><p><img src="/blog/" class="lazyload" data-src="/blog/2020/04/04/%E7%AC%94%E8%AE%B0/Untitled%201/Untitled/ARP%20RARP/Untitled%2013.png"  alt="ARP%20RARP/Untitled%2013.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ARP协议与RARP协议&quot;&gt;&lt;a href=&quot;#ARP协议与RARP协议&quot; class=&quot;headerlink&quot; title=&quot;ARP协议与RARP协议&quot;&gt;&lt;/a&gt;ARP协议与RARP协议&lt;/h1&gt;&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
